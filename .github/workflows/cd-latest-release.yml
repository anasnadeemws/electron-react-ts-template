name: Publish Latest

on:
  push:
    branches:
      - master

jobs:
  publish:
    # To enable auto publishing to github, update your electron publisher
    # # config in package.json > "build" and remove the conditional below
    # if: ${{ github.repository_owner == 'electron-react-boilerplate' }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Get Commit Message
        run: |
          declare -A category=( [fix]="" [chore]="" [revert]="" [build]="" [docs]="" [feat]="" [perf]="" [refactor]="" [style]="" [temp]="" [test]="" [ci]="" [others]="") 
          declare -A categoryTitle=( [fix]="<h5>Bug Fixes</h5>" [build]="<h5>Build</h5>" [docs]="<h5>Documentation</h5>" [feat]="<h5>New Features</h5>" [chore]="<h5>Changes to build process or aux tools</h5>" [ci]="<h5>Changes to CI config</h5>" [temp]="<h5>Temporary commit</h5>" [perf]="<h5>Performance Enhancement</h5>" [revert]="<h5>Revert Commits</h5>" [refactor]="<h5>Refactored</h5>" [style]="<h5>Changed Style</h5>" [test]="<h5>Added Tests</h5>" [others]="<h5>Others</h5>") 
          msg="#${{ steps.getMergedPR.outputs.number}} ${{ steps.getMergedPR.outputs.title}}"
          for i in $(git log --format=%h $(git merge-base HEAD^1 HEAD^2)..HEAD^2)
          do
            IFS=":" read -r type cmmsg <<< $(git log --format=%B -n 1 $i)
            type="${type}" | xargs
            text_msg="&nbsp;&nbsp;&nbsp;&nbsp;&#8226; $i - ${cmmsg}<br/>"
            flag=1
            for i in "${!category[@]}"
            do
                if [ "${type}" == "$i" ]
                then
                    category[$i]+="${text_msg}"
                    flag=0
                    break
                fi
            done 
                if [ $flag -eq 1 ]
                then
                    category[others]+="${text_msg}"
                fi
            done
            for i in "${!category[@]}" 
            do
                if [ ! -z "${category[$i]}" ] && [ "others" != "$i" ]
                    then
                    msg+="${categoryTitle[$i]}${category[$i]}"
                fi
            done
            if [ ! -z "${category[others]}" ]
            then
                msg+="${categoryTitle[others]}${category[others]}"
            fi
            echo "COMMIT_MESSAGE=${msg}" >> $GITHUB_ENV

      - name: Bump version and push tag
        run: |
          cd "$GITHUB_WORKSPACE"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"
          npm version patch
          git push

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Create Beta Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          release_name: v${{ steps.package-version.outputs.current-version}}
          body: ${{ env.COMMIT_MESSAGE }}
          draft: false
          prerelease: false

      - name: Publish releases
        env:
          # # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EP_PRE_RELEASE: false
        run: |
          yarn run electron-builder -- --publish always --linux
