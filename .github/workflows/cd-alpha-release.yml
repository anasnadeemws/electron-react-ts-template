name: Publish App Alpha

on:
  push:
    branches:
      - dev

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Bump version and push tag
        run: |
          cd "$GITHUB_WORKSPACE"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config user.name "$GITHUB_ACTOR"
          npm version prerelease --preid=alpha
          git push

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Create Alpha Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          release_name: v${{ steps.package-version.outputs.current-version}}
          draft: false
          prerelease: true

      - name: Publish releases
        env:
          # # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EP_DRAFT: false
          EP_PRE_RELEASE: true
        run: |
          yarn run electron-builder -- --publish always --linux
